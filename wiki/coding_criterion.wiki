#summary emlog 代码编写规范


为了让emlog的代码清晰可读，希望所有加入emlog开发的程序员严格按照如下规则为emlog添砖加瓦：）
规则还会不断的添加进来。由于历史原因当前的emlog脚本有些与该规则抵触，我们会逐渐修改，新加入的代码务必恪守该规则！


==函数==

函数名是一个动词，采用大小写混合的方式，第一个单词的首字母小写，其后单词的首字母大写。
function run();
function runFast();
function getBackground();

通常每个方法都是执行一个动作的，所以对它的命名应该清楚的说明它是做什么的：用checkForErrors()代替errorCheck()，用dumpDataToFile()代替dataFile()。这么做也可以使功能和数据成为更可区分的物体。

有时后缀名是有用的: 
Max - 含义为某实体所能赋予的最大值。
Cnt - 一个运行中的计数变量的当前值。
Key - 键值。
例如：retryMax 表示最多重试次数，retryCnt 表示当前重试次数。 

有时前缀名是有用的： 
is - 含义为问一个关于某样事物的问题。无论何时，当人们看到Is就会知道这是一个问题。 
get - 含义为取得一个数值。
set - 含义为设定一个数值
例如（特别注意函数注释）：

{{{
/*
 函数说明
 @param string $varname 参数说明
 @param string $varname 参数说明
 @return string  返回值说明
*/
function isHitRetryLimit($var,$var2)
{
   ..........
}
}}}



==if-else语句==
应该具有如下格式：

{{{
if (condition)
{
    statements;
} else if (condition){
　　statements;
} else{
　　statements;
}
}}}

避免如下省略大括号的写法：
{{{
if (condition)

　　statements;

}}}


==while语句==
一个while语句应该具有如下格式
{{{
while (condition) 
{
　　statements;
}

}}}


==for  foreach 语句==
一个for语句应该具有如下格式：

{{{
for (initialization; condition; update)
{
　　statements;
}

foreach()
{
   statements;
}
}}}

==switch语句==

{{{
switch (condition) {
　　case ABC:
　　　　statements;
 break;
　　case DEF:
　　　statements;
　　　break;
　　case XYZ:
　　　　statements;
　　　　break;
　　default:
　　　　statements;
　　　　break;
}

}}}

==其他注意事项==

1 代码缩进使用tab ，避免使用空格

2 尽量多写点注释

3 向svn代码库提交代码的时候要写清楚提交日志